// <auto-generated />
using CustomerOrder.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerOrder.Infrastructure.Migrations
{
    [DbContext(typeof(CustomerOrderContext))]
    [Migration("20220227102541_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CustomerOrder.Infrastructure.Entity.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("RequiredBinWidth")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("CustomerOrder.Infrastructure.Entity.OrderProduct", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("ProductTypeId")
                        .HasColumnType("smallint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductTypeId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("CustomerOrder.Infrastructure.Entity.ProductType", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short>("Stack")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Width")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Name = "Photobook",
                            Stack = (short)1,
                            Width = 19m
                        },
                        new
                        {
                            Id = (short)2,
                            Name = "Calendar",
                            Stack = (short)1,
                            Width = 10m
                        },
                        new
                        {
                            Id = (short)3,
                            Name = "Canvas",
                            Stack = (short)1,
                            Width = 16m
                        },
                        new
                        {
                            Id = (short)4,
                            Name = "Cards",
                            Stack = (short)1,
                            Width = 4.7m
                        },
                        new
                        {
                            Id = (short)5,
                            Name = "Mug",
                            Stack = (short)4,
                            Width = 94m
                        });
                });

            modelBuilder.Entity("CustomerOrder.Infrastructure.Entity.OrderProduct", b =>
                {
                    b.HasOne("CustomerOrder.Infrastructure.Entity.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CustomerOrder.Infrastructure.Entity.ProductType", "ProductType")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("CustomerOrder.Infrastructure.Entity.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("CustomerOrder.Infrastructure.Entity.ProductType", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
